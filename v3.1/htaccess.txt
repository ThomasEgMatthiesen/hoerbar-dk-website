Yes, it's possible to achieve the redirection in the opposite direction, 
so that when a user visits http://www.website.com/here-you-can-hear/, 
the server actually serves the content from http://www.website.com/?page=here-you-can-hear/, 
while the URL in the browser remains http://www.website.com/here-you-can-hear/.

You can use the following .htaccess rules to accomplish this:

RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.+)/?$ /?page=$1 [QSA,L]


Let's break down what each line does:
- RewriteEngine On: Enables the rewriting engine.
- RewriteCond %{REQUEST_FILENAME} !-f: Ensures that the request is not for an existing file.
- RewriteCond %{REQUEST_FILENAME} !-d: Ensures that the request is not for an existing directory.
- RewriteRule ^(.+)/?$ /?page=$1 [QSA,L]: Captures the part of the URL after the domain name and before any query string ((.+)). 
  It then passes this captured part as the value of the page parameter in the query string. 
  The [QSA,L] flag ensures that any existing query string parameters are appended to the rewritten URL, 
  and L signifies that this is the last rule to be applied.

With these rules in place, when a user visits http://www.website.com/here-you-can-hear/, 
the server internally serves the content from http://www.website.com/?page=here-you-can-hear/, 
while the URL in the browser remains http://www.website.com/here-you-can-hear/. 
This way, you achieve the desired functionality of using clean URLs while maintaining the necessary query parameters for your application.